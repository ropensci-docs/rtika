[{"path":"https://docs.ropensci.org/rtika/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://docs.ropensci.org/rtika/articles/rtika_introduction.html","id":"a-digital-babel-fish","dir":"Articles","previous_headings":"","what":"A Digital Babel Fish","title":"Introduction to rtika","text":"Apache Tika similar Babel fish Douglas Adam’s book, “Hitchhikers’ Guide Galaxy” (C. Mattmann Zitting 2011, 3). Babel fish translates natural language . Apache Tika yet translate natural languages, starts tame tower babel digital document formats. Babel fish allowed person understand Vogon poetry, Tika allows computer extract text objects Microsoft Word. world digital file formats like place community language. Academic, business, government, online communities use anywhere file types thousands. Unfortunately, attempts unify groups around single format often fruitless (C. . Mattmann 2013). plethora document formats become common concern. Tika common library address issue. Starting Apache Nutch 2005, Tika became project 2007 component Apache projects including Lucene, Jackrabbit, Mahout, Solr (C. Mattmann Zitting 2011, 17). increased volume data digital archives, terabyte sized data becoming common, Tika’s design goals include keeping complexity bay, low memory consumption, fast processing (C. Mattmann Zitting 2011, 18). rtika package interface Apache Tika leverages Tika’s batch processor module parse many documents fairly efficiently. Therefore, recommend using batches whenever possible.","code":".----.                  ____    __\\\\\\\\\\\\__                             \\___'--\"          .-.                      /___>------rtika  '0'                     /____,--.        \\----B                         \"\".____  ___-\"                       //    / /                                            ]/"},{"path":"https://docs.ropensci.org/rtika/articles/rtika_introduction.html","id":"extract-plain-text","dir":"Articles","previous_headings":"","what":"Extract Plain Text","title":"Introduction to rtika","text":"Video, sound images important, yet much meaningful data remains numeric textual. Tika can parse many formats extract alpha-numeric characters, along characters control arrangement text, like line breaks. recommend analyst start directory computer get vector paths file using base::list.files(). commented code recipe. , use test files included package. output R character vector length order input files. example , several seconds overhead start Tika batch processor process output. costly file first one. Large batches parsed quickly. example, parsing thousands 1-5 page Word documents, ’ve measured 1/100th second per document average. Occasionally, files parsable returned value file NA. reasons include corrupt files, disk input/output issues, empty files, password protection, unhandled format, document structure broken, document unexpected variation. issues rare. Tika works well documents, archive large may small percentage unparsable files, might want handle . Plain text easy search using base::grep(). plain text, variety interesting analyses possible, ranging word counting constructing matrices deep learning. Much text processing handled easily well documented tidytext package (Silge Robinson 2017). Among things, handles tokenization creating term-document matrices.","code":"library('rtika') library('magrittr')  # Code to get ALL the files in my_path:  # my_path <- \"~\" # batch <- file.path(my_path, #                 list.files(path = my_path, #                 recursive = TRUE))  # pipe the batch into tika_text()  # to get plain text  # test files batch <- c(   system.file(\"extdata\", \"jsonlite.pdf\", package = \"rtika\"),   system.file(\"extdata\", \"curl.pdf\", package = \"rtika\"),   system.file(\"extdata\", \"table.docx\", package = \"rtika\"),   system.file(\"extdata\", \"xml2.pdf\", package = \"rtika\"),   system.file(\"extdata\", \"R-FAQ.html\", package = \"rtika\"),   system.file(\"extdata\", \"calculator.jpg\", package = \"rtika\"),   system.file(\"extdata\", \"tika.apache.org.zip\", package = \"rtika\") )  text <-       batch %>%     tika_text()   # normal syntax also works: # text <- tika_text(batch) # Find which files had an issue # Handle them if needed batch[which(is.na(text))] #> character(0) length(text) #> [1] 7  search <-     text[grep(pattern = ' is ', x = text)]  length(search) #> [1] 6"},{"path":"https://docs.ropensci.org/rtika/articles/rtika_introduction.html","id":"preserve-content-type-when-downloading","dir":"Articles","previous_headings":"","what":"Preserve Content-Type when Downloading","title":"Introduction to rtika","text":"general suggestion use tika_fetch() downloading files Internet, preserve server Content-Type information file extension. Tika’s Content-Type detection improved file extensions (Tika also relies features Magic bytes, unique control bytes file header). tika_fetch() function tries preserves Content-Type information download server finding matching extension Tika’s database. tika_fetch() function used internally tika() functions processing URLs. using tika_fetch() explicitly specified directory, can also save files return later.","code":"download_directory <- tempfile('rtika_')  dir.create(download_directory)  urls <- c('https://tika.apache.org/',           'https://cran.rstudio.com/web/packages/keras/keras.pdf')  downloaded <-      urls %>%      tika_fetch(download_directory)  # it will add the appropriate file extension to the downloads downloaded #> [1] \"/tmp/Rtmp5OfELw/rtika_89a35cbe139/rtika_file89a651840b0.html\" #> [2] \"/tmp/Rtmp5OfELw/rtika_89a35cbe139/rtika_file89a4978cbec.pdf\""},{"path":"https://docs.ropensci.org/rtika/articles/rtika_introduction.html","id":"settings-for-big-datasets","dir":"Articles","previous_headings":"","what":"Settings for Big Datasets","title":"Introduction to rtika","text":"Large jobs possible rtika. However, hundreds thousands documents, R object returned tika() functions can big RAM. cases, good use computer’s disk , since running RAM slows computer. suggest changing two parameters tika() parsers. First, set return = FALSE prevent returning big R character vector text. Second, specify existing directory file system using output_dir, pointing processed files saved. files can dealt smaller batches later . Another option increase number threads, setting threads something like number processors minus one. location file output_dir follows convention Apache Tika batch processor: full path file mirrors original file’s path, within output_dir. Note tika_text() produces .txt files, tika_xml() produces .xml files, tika_html() produces .html files, tika_json() tika_json_text() produce .json files.","code":"# create a directory not already in use. my_directory <-    tempfile('rtika_')                    dir.create(my_directory)  # pipe the batch to tika_text() batch %>% tika_text(threads = 4,           return = FALSE,           output_dir = my_directory)   # list all the file locations  processed_files <- file.path(                 normalizePath(my_directory),                 list.files(path = my_directory,                 recursive = TRUE)                 ) processed_files #> [1] \"/tmp/Rtmp5OfELw/rtika_89a57e279e1/usr/local/lib/R/site-library/rtika/extdata/calculator.jpg.txt\"      #> [2] \"/tmp/Rtmp5OfELw/rtika_89a57e279e1/usr/local/lib/R/site-library/rtika/extdata/curl.pdf.txt\"            #> [3] \"/tmp/Rtmp5OfELw/rtika_89a57e279e1/usr/local/lib/R/site-library/rtika/extdata/jsonlite.pdf.txt\"        #> [4] \"/tmp/Rtmp5OfELw/rtika_89a57e279e1/usr/local/lib/R/site-library/rtika/extdata/R-FAQ.html.txt\"          #> [5] \"/tmp/Rtmp5OfELw/rtika_89a57e279e1/usr/local/lib/R/site-library/rtika/extdata/table.docx.txt\"          #> [6] \"/tmp/Rtmp5OfELw/rtika_89a57e279e1/usr/local/lib/R/site-library/rtika/extdata/tika.apache.org.zip.txt\" #> [7] \"/tmp/Rtmp5OfELw/rtika_89a57e279e1/usr/local/lib/R/site-library/rtika/extdata/xml2.pdf.txt\""},{"path":"https://docs.ropensci.org/rtika/articles/rtika_introduction.html","id":"get-a-structured-xhtml-rendition","dir":"Articles","previous_headings":"","what":"Get a Structured XHTML Rendition","title":"Introduction to rtika","text":"Plain text falls short purposes. example, pagination might important selecting particular page PDF. Tika authors chose HTML universal format offers semantic elements common familiar. example, hyperlink represented HTML anchor element <> attribute href. HTML Tika preserves metadata: type file different information preserved Tika’s internal parsers. particular aspects vary. notes: PDF files retain pagination, page starting XHTML element <div class=\"page\">. PDFs retain hyperlinks anchor element <> attribute href. Word Excel documents retain tabular data <table> element. rvest package function get tables data rvest::html_table(). Multiple Excel sheets preserved multiple XHTML tables. Ragged tables, rows differing numbers cells, supported. Note tika_html() tika_xml() produce strict form HTML called XHTML, either works essentially documents ’ve tried.","code":"library('xml2')  # get XHTML text html <-      batch %>%     tika_html() %>%     lapply(xml2::read_html)  # parse links from documents links <-     html %>%     lapply(xml2::xml_find_all, '//a') %>%     lapply(xml2::xml_attr, 'href')  sample(links[[1]],10) #>  [1] \"http://github.com/jeroen/jsonlite/issues\"                                       #>  [2] \"http://docs.mongodb.org/manual/reference/program/mongoexport/#cmdoption--query\" #>  [3] \"https://arxiv.org/abs/1403.2805\"                                                #>  [4] \"http://ndjson.org\"                                                              #>  [5] \"http://en.wikipedia.org/wiki/Singleton_(mathematics)\"                           #>  [6] \"http://jsonlines.org/\"                                                          #>  [7] \"https://arxiv.org/abs/1403.2805\"                                                #>  [8] \"https://arxiv.org/abs/1403.2805\"                                                #>  [9] \"https://arxiv.org/abs/1403.2805\"                                                #> [10] \"http://docs.mongodb.org/manual/reference/program/mongoexport/#cmdoption--query\""},{"path":"https://docs.ropensci.org/rtika/articles/rtika_introduction.html","id":"access-metadata-in-the-xhtml","dir":"Articles","previous_headings":"","what":"Access Metadata in the XHTML","title":"Introduction to rtika","text":"tika_html() tika_xml() functions focused extracting strict, structured HTML XHTML. addition, metadata can accessed meta tags XHTML. Common metadata fields include Content-Type, Content-Length, Creation-Date, Content-Encoding.","code":"# Content-Type html %>% lapply(xml2::xml_find_first, '//meta[@name=\"Content-Type\"]') %>% lapply(xml2::xml_attr, 'content') %>% unlist() #> [1] \"application/pdf\"                                                         #> [2] \"application/pdf\"                                                         #> [3] \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" #> [4] \"application/pdf\"                                                         #> [5] \"text/html; charset=UTF-8\"                                                #> [6] \"image/jpeg\"                                                              #> [7] \"application/zip\"  # Creation-Date html %>% lapply(xml2::xml_find_first, '//meta[@name=\"Creation-Date\"]') %>% lapply(xml2::xml_attr, 'content') %>% unlist() #> [1] NA NA NA NA NA NA NA"},{"path":"https://docs.ropensci.org/rtika/articles/rtika_introduction.html","id":"get-metadata-in-json-format","dir":"Articles","previous_headings":"","what":"Get Metadata in JSON Format","title":"Introduction to rtika","text":"Metadata can also accessed tika_json() tika_json_text(). Consider can found single image: addition, specific format can specialized metadata fields. example, photos sometimes store latitude longitude:","code":"library('jsonlite') # batch <- system.file(\"extdata\", \"calculator.jpg\", package = \"rtika\")  # a list of data.frames metadata <-     batch %>%      tika_json() %>%     lapply(jsonlite::fromJSON)  # look at metadata for an image str(metadata[[6]]) #> 'data.frame':    1 obs. of  119 variables: #>  $ Compression Type                    : chr \"Baseline\" #>  $ X-TIKA:Parsed-By-Full-Set           :List of 1 #>   ..$ : chr  \"org.apache.tika.parser.CompositeParser\" \"org.apache.tika.parser.DefaultParser\" \"org.apache.tika.parser.image.JpegParser\" \"org.apache.tika.parser.ocr.TesseractOCRParser\" #>  $ X-TIKA:content_handler              : chr \"ToXMLContentHandler\" #>  $ Number of Components                : chr \"3\" #>  $ Exif SubIFD:Subject Location        : chr \"1956 873 610 612\" #>  $ Component 2                         : chr \"Cb component: Quantization table 1, Sampling factors 1 horiz/1 vert\" #>  $ Component 1                         : chr \"Y component: Quantization table 0, Sampling factors 2 horiz/2 vert\" #>  $ Exif IFD0:X Resolution              : chr \"72 dots per inch\" #>  $ tiff:ResolutionUnit                 : chr \"Inch\" #>  $ Exif SubIFD:Scene Type              : chr \"Directly photographed image\" #>  $ Exif SubIFD:Exposure Mode           : chr \"Auto exposure\" #>  $ tiff:Make                           : chr \"Apple\" #>  $ Component 3                         : chr \"Cr component: Quantization table 1, Sampling factors 1 horiz/1 vert\" #>  $ Exif SubIFD:Components Configuration: chr \"YCbCr\" #>  $ Exif SubIFD:Metering Mode           : chr \"Spot\" #>  $ Exif SubIFD:White Balance Mode      : chr \"Auto white balance\" #>  $ tiff:BitsPerSample                  : chr \"8\" #>  $ Unknown tag (0x0002)                : chr \"[558 values]\" #>  $ Caption Digest                      : chr \"158 218 29 133 38 133 242 158 59 205 21 44 236 23 180 123\" #>  $ Exif SubIFD:Sub-Sec Time Original   : chr \"854\" #>  $ Unknown tag (0x0009)                : chr \"19\" #>  $ tiff:Orientation                    : chr \"1\" #>  $ tiff:Software                       : chr \"7.1.1\" #>  $ X-TIKA:embedded_depth               : chr \"0\" #>  $ geo:long                            : chr \"-118.449578\" #>  $ Unknown tag (0x0001)                : chr \"0\" #>  $ tiff:YResolution                    : chr \"72.0\" #>  $ Y Resolution                        : chr \"72 dots\" #>  $ Coded Character Set                 : chr \"UTF-8\" #>  $ Exif SubIFD:Flash                   : chr \"Flash did not fire\" #>  $ Thumbnail Height Pixels             : chr \"0\" #>  $ exif:ExposureTime                   : chr \"0.03333333333333333\" #>  $ File Size                           : chr \"83654 bytes\" #>  $ Exif SubIFD:Exif Version            : chr \"2.21\" #>  $ Exif SubIFD:Focal Length            : chr \"4.1 mm\" #>  $ Exif IFD0:Resolution Unit           : chr \"Inch\" #>  $ Exif SubIFD:Lens Model              : chr \"iPhone 5s back camera 4.12mm f/2.2\" #>  $ Exif SubIFD:Date/Time Original      : chr \"2014:07:01 09:49:22\" #>  $ Exif SubIFD:Sub-Sec Time Digitized  : chr \"854\" #>  $ Unknown tag (0x0007)                : chr \"1\" #>  $ Resolution Units                    : chr \"none\" #>  $ File Modified Date                  : chr \"Wed Feb 28 05:56:18 +00:00 2024\" #>  $ Exif SubIFD:Sensing Method          : chr \"One-chip color area sensor\" #>  $ Epoch                               : chr \"0\" #>  $ Flags                               : chr \"Valid\" #>  $ Image Height                        : chr \"800 pixels\" #>  $ Thumbnail Width Pixels              : chr \"0\" #>  $ GPS:GPS Longitude                   : chr \"-118° 26' 58.48\\\"\" #>  $ GPS:GPS Longitude Ref               : chr \"W\" #>  $ tiff:Model                          : chr \"iPhone 5s\" #>  $ Exif SubIFD:Brightness Value        : chr \"3.455\" #>  $ exif:IsoSpeedRatings                : chr \"50\" #>  $ Exif SubIFD:Exposure Program        : chr \"Program normal\" #>  $ Exif IFD0:Make                      : chr \"Apple\" #>  $ GPS:GPS Altitude Ref                : chr \"Sea level\" #>  $ X-TIKA:parse_time_millis            : chr \"344\" #>  $ Exif SubIFD:Aperture Value          : chr \"f/2.2\" #>  $ Exif SubIFD:Date/Time Digitized     : chr \"2014:07:01 09:49:22\" #>  $ Run Time                            : chr \"[104 values]\" #>  $ tiff:ImageWidth                     : chr \"600\" #>  $ GPS:GPS Altitude                    : chr \"95 metres\" #>  $ Exif IFD0:Y Resolution              : chr \"72 dots per inch\" #>  $ Unknown tag (0x0006)                : chr \"163\" #>  $ Exif SubIFD:ISO Speed Ratings       : chr \"50\" #>  $ Number of Tables                    : chr \"4 Huffman tables\" #>  $ Exif SubIFD:Exif Image Width        : chr \"600 pixels\" #>  $ X Resolution                        : chr \"72 dots\" #>  $ Version                             : chr \"1.1\" #>  $ Application Record Version          : chr \"2\" #>  $ Time Created                        : chr \"09:49:22\" #>  $ Exif SubIFD:Unique Image ID         : chr \"bdeb111183eae36c0000000000000000\" #>  $ exif:FNumber                        : chr \"2.2\" #>  $ Exif SubIFD:Shutter Speed Value     : chr \"1/30 sec\" #>  $ Digital Date Created                : chr \"2014:07:01\" #>  $ resourceName                        : chr \"calculator.jpg\" #>  $ GPS:GPS Time-Stamp                  : chr \"16:49:21.000 UTC\" #>  $ Exif IFD0:Orientation               : chr \"Top, left side (Horizontal / normal)\" #>  $ Exif SubIFD:F-Number                : chr \"f/2.2\" #>  $ exif:FocalLength                    : chr \"4.12\" #>  $ X-TIKA:Parsed-By                    :List of 1 #>   ..$ : chr  \"org.apache.tika.parser.CompositeParser\" \"org.apache.tika.parser.DefaultParser\" \"org.apache.tika.parser.image.JpegParser\" \"org.apache.tika.parser.ocr.TesseractOCRParser\" #>  $ XMP Value Count                     : chr \"4\" #>  $ Exif IFD0:Software                  : chr \"7.1.1\" #>  $ tika:file_ext                       : chr \"jpg\" #>  $ Value                               : chr \"131501 seconds\" #>  $ X-TIKA:content                      : chr \"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\\n<head>\\n<meta name=\\\"Compression Type\\\" content=\\\"Baseline\\\" />\\\"| __truncated__ #>  $ Exif IFD0:Date/Time                 : chr \"2014:07:01 09:49:22\" #>  $ Date Created                        : chr \"2014:07:01\" #>  $ Unknown tag (0x0005)                : chr \"159\" #>  $ GPS:GPS Version ID                  : chr \"2.200\" #>  $ Exif SubIFD:Scene Capture Type      : chr \"Standard\" #>  $ geo:lat                             : chr \"34.072006\" #>  $ Data Precision                      : chr \"8 bits\" #>  $ tika_batch_fs:relative_path         : chr \"usr/local/lib/R/site-library/rtika/extdata/calculator.jpg\" #>  $ tiff:ImageLength                    : chr \"800\" #>  $ Exif SubIFD:Lens Specification      : chr \"4.12mm f/2.2\" #>  $ Exif IFD0:Model                     : chr \"iPhone 5s\" #>  $ dcterms:created                     : chr \"2014-07-01T09:49:22\" #>  $ dcterms:modified                    : chr \"2014-07-01T09:49:22\" #>  $ exif:Flash                          : chr \"false\" #>   [list output truncated] metadata[[6]]$'geo:lat' #> [1] \"34.072006\" metadata[[6]]$'geo:long' #> [1] \"-118.449578\""},{"path":"https://docs.ropensci.org/rtika/articles/rtika_introduction.html","id":"get-metadata-from-container-documents","dir":"Articles","previous_headings":"","what":"Get Metadata from “Container” Documents","title":"Introduction to rtika","text":"types documents can multiple objects within . example, .gzip file may contain many files. tika_json() tika_json_text() functions special ability others . recurse container examine file within. Tika authors call format jsonRecursive reason. following example, created compressed archive Apache Tika homepage, using command line programs wget zip. small archive includes HTML page, images, required files. main metadata fields recursive json output: X-TIKA:embedded_resource_path field tells document hierarchy object resides. first item character vector root, container . items embedded one layer , indicated forward slash /. context X-TIKA:embedded_resource_path field, paths literally directory paths like file system. reality, image icon_info_sml.gif within folder called images. Rather, number forward slashes indicates level recursion within document. One slash / reveals first set embedded documents. Additional slashes / indicate parser recursed embedded document within embedded document. Content-Type metadata reveals first item container type application/zip. items deeper include web formats application/xhtml+xml, image/png, text/css. X-TIKA:content field includes XHTML rendition object. possible extract plain text X-TIKA:content field calling tika_json_text() instead. difference tika_json() tika_json_text(). may surprising learn Word documents containers (least modern .docx variety ). parsing tika_json() tika_json_text(), various images embedded objects can analyzed. However, added complexity, document may produce long vector Content-Types embedded file, instead single Content-Type container like tika_xml() tika_html().","code":"# wget gets a webpage and other files.  # sys::exec_wait('wget', c('--page-requisites', 'https://tika.apache.org/')) # Put it all into a .zip file  # sys::exec_wait('zip', c('-r', 'tika.apache.org.zip' ,'tika.apache.org')) batch <- system.file(\"extdata\", \"tika.apache.org.zip\", package = \"rtika\")  # a list of data.frames metadata <-     batch %>%      tika_json() %>%     lapply(jsonlite::fromJSON)  # The structure is very long. See it on your own with: str(metadata) # the 'X-TIKA:embedded_resource_path' field embedded_resource_path <-      metadata %>%     lapply(function(x){ x$'X-TIKA:embedded_resource_path' })   embedded_resource_path #> [[1]] #>  [1] NA                       \"/index.html\"            \"/site.css\"              #>  [4] \"/external.png\"          \"/icon_info_sml.gif\"     \"/icon_warning_sml.gif\"  #>  [7] \"/icon_error_sml.gif\"    \"/icon_success_sml.gif\"  \"/tika.png\"              #> [10] \"/mattmann_cover150.jpg\" \"/asf-logo.gif\" content_type <-     metadata %>%     lapply(function(x){ x$'Content-Type' })   content_type #> [[1]] #>  [1] \"application/zip\"                      #>  [2] \"application/xhtml+xml; charset=UTF-8\" #>  [3] \"text/css; charset=ISO-8859-1\"         #>  [4] \"image/png\"                            #>  [5] \"image/gif\"                            #>  [6] \"image/gif\"                            #>  [7] \"image/gif\"                            #>  [8] \"image/gif\"                            #>  [9] \"image/png\"                            #> [10] \"image/jpeg\"                           #> [11] \"image/gif\" content <-       metadata %>%     lapply(function(x){ x$'X-TIKA:content' })  str(content) #> List of 1 #>  $ : chr [1:11] \"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\\n<head>\\n<meta name=\\\"X-TIKA:Parsed-By\\\" content=\\\"org.apache.tik\"| __truncated__ \"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\\n<head>\\n<link rel=\\\"icon\\\" type=\\\"image/png\\\" href=\\\"./tikaNoTex\"| __truncated__ \"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\\n<head>\\n<meta name=\\\"embeddedRelationshipId\\\" content=\\\"tika.apa\"| __truncated__ \"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\\n<head>\\n<meta name=\\\"Transparency Alpha\\\" content=\\\"nonpremultip\"| __truncated__ ..."},{"path":"https://docs.ropensci.org/rtika/articles/rtika_introduction.html","id":"extending-rtika","dir":"Articles","previous_headings":"","what":"Extending rtika","title":"Introduction to rtika","text":"box, rtika uses available Tika Detectors Parsers runs sensible defaults. , work well. future versions, Tika uses configuration file customize parsing. config file option hold rtika, Tika’s batch module still new config file format likely change backward incompatible. Please stay tuned. also room improvement document formats common R community, especially Latex Markdown. Tika currently reads writes formats just fine, captures metadata recognizes MIME type downloading tika_fetch(). However, Tika parsers fully understand Latex Markdown document structure, render XHTML, extract plain text ignoring markup. cases, Pandoc useful (See: https://pandoc.org/demos.html ). may find resources useful: Current Tika issues progress can seen : https://issues.apache.org/jira/projects/TIKA Tika Wiki : https://cwiki.apache.org/confluence/display/tika/ Tika sourcecode: https://github.com/apache/tika","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rtika/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sasha Goodman. Author, maintainer. Apache Software Foundation. Author, copyright holder. Julia Silge. Reviewer.            Reviewed package rOpenSci, see https://github.com/ropensci/software-review/issues/191/ David Gohel. Reviewer.            Reviewed package rOpenSci, see https://github.com/ropensci/software-review/issues/191/","code":""},{"path":"https://docs.ropensci.org/rtika/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Goodman S, Apache Software Foundation (2024). rtika: R Interface 'Apache Tika'. R package version 2.7.0, https://github.com/ropensci/rtika/, https://docs.ropensci.org/rtika/.","code":"@Manual{,   title = {rtika: R Interface to 'Apache Tika'},   author = {Sasha Goodman and {The Apache Software Foundation}},   year = {2024},   note = {R package version 2.7.0, https://github.com/ropensci/rtika/},   url = {https://docs.ropensci.org/rtika/}, }"},{"path":"https://docs.ropensci.org/rtika/index.html","id":"rtika","dir":"","previous_headings":"","what":"R Interface to Apache Tika ","title":"R Interface to Apache Tika ","text":"Extract text metadata thousand file types.  Apache Tika content detection analysis framework, written Java, stewarded Apache Software Foundation. detects extracts metadata text thousand different file types, well providing Java library, server command-line editions suitable use programming languages … common popular formats, Tika provides content extraction, metadata extraction language identification capabilities. (https://en.wikipedia.org/wiki/Apache_Tika, accessed Jan 18, 2018) R interface Tika software.","code":""},{"path":"https://docs.ropensci.org/rtika/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Interface to Apache Tika ","text":"start, need R Java 8 OpenJDK 1.8. Higher versions work. check version, run command java -version terminal. Get Java installation tips https://www.java.com/en/download/ https://openjdk.org/install/. rJava package required, installation simple. can cut paste following snippet: Read introductory article https://docs.ropensci.org/rtika/articles/rtika_introduction.html.","code":"install.packages('rtika', repos = 'https://cloud.r-project.org')  library('rtika')  # You need to install the Apache Tika .jar once. install_tika()"},{"path":"https://docs.ropensci.org/rtika/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"R Interface to Apache Tika ","text":"tika_text() extract plain text. tika_xml() tika_html() get structured XHMTL rendition. tika_json() get metadata .json, XHMTL content. tika_json_text() get metadata .json, plain text content. tika() main function others inherit . tika_fetch() download files file extension matching Content-Type.","code":""},{"path":"https://docs.ropensci.org/rtika/index.html","id":"supported-file-types","dir":"","previous_headings":"","what":"Supported File Types","title":"R Interface to Apache Tika ","text":"Tika parses extracts text metadata one thousand digital formats, including: Portable Document Format (.pdf) Microsoft Office document formats (Word, PowerPoint, Excel, etc.) Rich Text Format (.rtf) Electronic Publication Format (.epub) Image formats (.jpeg, .png, etc.) Mail formats (.mbox, Outlook) HyperText Markup Language (.html) XML derived formats (.xml, etc.) Compression packaging formats (.gzip, .rar, etc.) OpenDocument Format iWorks document formats WordPerfect document formats Text formats Feed Syndication formats Help formats Audio formats Video formats Java class files archives Source code CAD formats Font formats Scientific formats Executable programs libraries Crypto formats list MIME types, look “Supported Formats” page : https://tika.apache.org/","code":""},{"path":"https://docs.ropensci.org/rtika/index.html","id":"get-plain-text","dir":"","previous_headings":"","what":"Get Plain Text","title":"R Interface to Apache Tika ","text":"rtika package processes batches documents efficiently, recommend batches. Currently, tika() parsers take tiny bit time spin , get annoying hundreds separate calls functions. learn find extract structured text metadata, read vignette: https://docs.ropensci.org/rtika/articles/rtika_introduction.html.","code":"# Test files batch <- c(   system.file(\"extdata\", \"jsonlite.pdf\", package = \"rtika\"),   system.file(\"extdata\", \"curl.pdf\", package = \"rtika\"),   system.file(\"extdata\", \"table.docx\", package = \"rtika\"),   system.file(\"extdata\", \"xml2.pdf\", package = \"rtika\"),   system.file(\"extdata\", \"R-FAQ.html\", package = \"rtika\"),   system.file(\"extdata\", \"calculator.jpg\", package = \"rtika\"),   system.file(\"extdata\", \"tika.apache.org.zip\", package = \"rtika\") )  # batches are best, and can also be piped with magrittr. text <- tika_text(batch)  # text has one string for each document: length(text) #> [1] 7  # A snippet: cat(substr(text[1], 54, 190))  #> lite’ #> June 1, 2017 #>  #> Version 1.5 #>  #> Title A Robust, High Performance JSON Parser and Generator for R #>  #> License MIT + file LICENSE #>  #> NeedsCompi"},{"path":"https://docs.ropensci.org/rtika/index.html","id":"enhancements","dir":"","previous_headings":"","what":"Enhancements","title":"R Interface to Apache Tika ","text":"Tika also can interact Tesseract OCR program Linux variants, extract plain text images text. tesseract-ocr installed, Tika automatically locate use images PDFs contain images text. However, seem work OS X Windows. try Linux, first follow Tesseract installation instructions. next time Tika run, work. different approach, suggest tesseract package @jeroen, specialized R interface. Apache Tika community welcomes feedback. Issues regarding R interface raised rTika Github Issue Tracker. confident issue concerns Tika one underlying parsers, use Tika Bugtracking System.","code":""},{"path":"https://docs.ropensci.org/rtika/index.html","id":"using-the-tika-app-directly","dir":"","previous_headings":"","what":"Using the Tika App Directly","title":"R Interface to Apache Tika ","text":"project package needs use Tika App .jar, can include rTika dependency call rtika::tika_jar() function get path Tika app installed system.","code":""},{"path":"https://docs.ropensci.org/rtika/index.html","id":"similar-r-packages","dir":"","previous_headings":"","what":"Similar R Packages","title":"R Interface to Apache Tika ","text":"number specialized parsers overlap functionality. example, pdftools package extracts metadata text PDF files, antiword package extracts text recent versions Word, epubr package @leonawicz processes epub files. packages depend Java, rTika . big difference Tika specialized parser Tika integrates dozens specialist libraries maintained Apache Foundation. Apache Tika processes thousand file types multiple versions . eases processing digital archives contain unpredictable files. example, researchers use Tika process archives court cases, governments, Internet Archive span multiple years. archives frequently contain diverse formats multiple versions format. Tika finds matching parser individual file, well suited diverse sets documents. general, parsing quality good consistently . contrast, specialized parsers may work particular version file, require extra tinkering. hand, specialized library can offer control features comes structured data formatting. example, tabulizer package @leeper @tpaskhalis includes bindings ‘Tabula PDF Table Extractor Library’. PDF files store tables series positions obvious boundaries data cells, extracting data.frame matrix requires heuristics customization package provides. fair Tika, formats rtika extract data table-like XML. example, Word Excel documents, Tika extracts simple tables XHTML data can turned tabular data.frame using rvest::html_table() function.","code":""},{"path":"https://docs.ropensci.org/rtika/index.html","id":"history","dir":"","previous_headings":"","what":"History","title":"R Interface to Apache Tika ","text":"September 2017, github.com user kyusque released tikaR, uses rJava package interact Tika (See: https://github.com/kyusque/tikaR). writing, provided similar text metadata extraction, xml output. Back March 2012, started similar project interface Apache Tika. code also used low-level functions rJava package. halted development discovering Tika command line interface (CLI) easier use. empty repository https://r-forge.r-project.org/projects/r-tika/. chose finally develop package getting excited Tika’s new ‘batch processor’ module, written Java. batch processor good efficiency processing tens thousands documents. , slow single document either, handles errors gracefully. Connecting R Tika batch processor turned relatively simple, R code simple. uses CLI point Tika files. Simplicity, along continuous testing, ease integration. anticipate researchers need plain text output, others want json output. want multiple processing threads speed things . features now implemented rtika, although apparently tikaR yet.","code":""},{"path":"https://docs.ropensci.org/rtika/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"R Interface to Apache Tika ","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/install_tika.html","id":null,"dir":"Reference","previous_headings":"","what":"Install or Update the Apache Tika jar — install_tika","title":"Install or Update the Apache Tika jar — install_tika","text":"downloads installs Tika App jar (~60 MB) user directory, verifies integrity file using checksum. default settings work fine.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/install_tika.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install or Update the Apache Tika jar — install_tika","text":"","code":"install_tika(   version = \"2.7.0\",   digest = paste0(\"7fefbe5570a95900d39193134e8277aec99e5450a8\",     \"cecbb5787b3d6651ebf735e460ccccddb49bdc2990\",     \"8a9058fc36e4689aed6da6d63a1cf70ca09ccf26bcca\"),   mirrors = c(\"https://ftp.wayne.edu/apache/tika/\",     \"http://mirrors.ocf.berkeley.edu/apache/tika/\", \"http://apache.cs.utah.edu/tika/\",     \"http://mirror.cc.columbia.edu/pub/software/apache/tika/\"),   retries = 2,   url = character() )"},{"path":"https://docs.ropensci.org/rtika/reference/install_tika.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install or Update the Apache Tika jar — install_tika","text":"version declared Tika version digest sha512 checksum. Set empty string \"\" skip check. mirrors vector Apache mirror sites. One picked randomly. retries number times try download. url Optional url particular location tika app. Setting character string overrides downloading random mirrors.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/install_tika.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install or Update the Apache Tika jar — install_tika","text":"Logical installation successful.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/install_tika.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install or Update the Apache Tika jar — install_tika","text":"default settings install_tika() typically left . function download version Tika jar tested work package, can verify file integrity using checksum. normally download random Apache mirror. mirror fails, tries archive http://archive.apache.org/dist/tika/. can also enter value url directly override . download directory determined tools::R_user_dir(\"rtika\", = \"data\"), specific operating system. tika() stopping error compalining jar, try running install_tika() .","code":""},{"path":"https://docs.ropensci.org/rtika/reference/install_tika.html","id":"uninstalling","dir":"Reference","previous_headings":"","what":"Uninstalling","title":"Install or Update the Apache Tika jar — install_tika","text":"uninstalling entire rtika package want remove Tika App jar also, run: unlink(tools::R_user_dir(\"rtika\", = \"data\"), recursive = TRUE) Alternately, navigate install folder delete manually. file path returned  tools::R_user_dir(\"rtika\", = \"data\"). path OS specific.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/install_tika.html","id":"distribution","dir":"Reference","previous_headings":"","what":"Distribution","title":"Install or Update the Apache Tika jar — install_tika","text":"Tika distributed Apache License Version 2.0, generally permits distribution code \"Object\" without \"Source\". master copy Apache Tika source code held GIT.  can fetch (clone) large source GitHub ( https://github.com/apache/tika ).","code":""},{"path":"https://docs.ropensci.org/rtika/reference/install_tika.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install or Update the Apache Tika jar — install_tika","text":"","code":"# \\donttest{ install_tika() #> Downloading the Tika App .jar version 2.7.0 into \"/github/home/.local/share/R/rtika\". The file is approximately 60 MB - this may take a while. #> Could not download the Tika App .jar from mirror \"https://ftp.wayne.edu/apache/tika/2.7.0/tika-app-2.7.0.jar\". #> Trying the Apache archive. #> The download is successful. #> The file integrity is good. #> The installation is successful. # }"},{"path":"https://docs.ropensci.org/rtika/reference/java.html","id":null,"dir":"Reference","previous_headings":"","what":"System Command to Run Java — java","title":"System Command to Run Java — java","text":"Gets system command needed run Java command line, string. Typically, string: 'java'.  However, R session JAVA_HOME environmental variable set, use locate java instead.  can persisted sessions (see Details ).","code":""},{"path":"https://docs.ropensci.org/rtika/reference/java.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"System Command to Run Java — java","text":"","code":"java()"},{"path":"https://docs.ropensci.org/rtika/reference/java.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"System Command to Run Java — java","text":"system command needed invoke Java, string.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/java.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"System Command to Run Java — java","text":"function used tika() functions internally default value java parameter. function tries find environmental variable using Sys.getenv(\"JAVA_HOME\"). looks java executable inside bin directory JAVA_HOME directory. want use specific version Java, set JAVA_HOME variable using Sys.setenv(JAVA_HOME = 'path'), 'path' path folder bin directory java executable. example, Windows 10 JAVA_HOME might C:/Program Files (x86)/Java/jre1.8.0_171.  Ubuntu OS X, might /usr directory. JAVA_HOME variable can also set persist sessions. Add path .Rprofile adding Sys.setenv(JAVA_HOME = 'path'), use every time R started.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/java.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"System Command to Run Java — java","text":"","code":"# \\donttest{ # Typically, this function returns the string 'java'. # If JAVA_HOME is set, it's a path to java in a 'bin' folder. java() #> [1] \"java\" # }"},{"path":"https://docs.ropensci.org/rtika/reference/rtika.html","id":null,"dir":"Reference","previous_headings":"","what":"rtika: R Interface to 'Apache Tika' — rtika","title":"rtika: R Interface to 'Apache Tika' — rtika","text":"Extract text metadata thousand file types. Get either plain text structured XHTML content.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/rtika.html","id":"installing","dir":"Reference","previous_headings":"","what":"Installing","title":"rtika: R Interface to 'Apache Tika' — rtika","text":"done already, finish installing rtika typing R console: install_tika()","code":""},{"path":"https://docs.ropensci.org/rtika/reference/rtika.html","id":"getting-started","dir":"Reference","previous_headings":"","what":"Getting Started","title":"rtika: R Interface to 'Apache Tika' — rtika","text":"tika_text function extract plain text many types documents. good place start. Please read Vignette also. main functions include tika_xml tika_html get structured XHMTL rendition. tika_json function gets metadata `.json`, XHMTL content. tika_json_text function gets metadata `.json`, plain text content. tika main function others inherit . Use tika_fetch download files file extension matching Content-Type.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika.html","id":null,"dir":"Reference","previous_headings":"","what":"Main R Interface to 'Apache Tika' — tika","title":"Main R Interface to 'Apache Tika' — tika","text":"Extract text metadata thousand file types. Get either plain text structured XHTML. Metadata includes Content-Type, character encoding, Exif data jpeg tiff images. See long list supported file types,  click \"Supported Formats\" link page : https://tika.apache.org/.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main R Interface to 'Apache Tika' — tika","text":"","code":"tika(   input,   output = c(\"text\", \"jsonRecursive\", \"xml\", \"html\")[1],   output_dir = \"\",   return = TRUE,   java = rtika::java(),   jar = rtika::tika_jar(),   threads = 2,   max_restarts = integer(),   timeout = 3e+05,   max_file_size = integer(),   config = system.file(\"extdata\", \"ocr.xml\", package = \"rtika\"),   args = character(),   quiet = TRUE,   cleanup = TRUE,   lib.loc = .libPaths() )"},{"path":"https://docs.ropensci.org/rtika/reference/tika.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main R Interface to 'Apache Tika' — tika","text":"input Character vector describing paths input documents. Strings starting 'http://','https://', 'ftp://' downloaded temporary directory. Windows, local paths span drives Windows convention. output Optional character vector output format. default, \"text\", gets plain text without metadata. \"xml\" \"html\" get XHTML text metadata. \"jsonRecursive\" gets XHTML text json metadata. c(\"jsonRecursive\",\"text\") c(\"J\",\"t\") get plain text json metadata. See 'Output Details' section. output_dir Optional directory path save converted files . Tika may overwrite files empty directory best. See 'Output Details' section using. return Logical R object returned. Defaults TRUE. set FALSE, output_dir () must specified. java Optional command invoke Java. example, can full path particular Java version. See Configuration section . jar Optional alternative path tika-app-X.XX.jar. Useful package becomes date. threads Integer number file consumer threads Tika uses. Defaults 2. max_restarts Integer maximum number times watchdog process restart child process. default limit. timeout Integer number milliseconds allowed parse process killed restarted. Defaults 300000. max_file_size Integer maximum bytes allowed. process files larger . default unlimited. config Path XML config file. Defaults system.file(\"extdata\", \"ocr.xml\", package = \"rtika\")'. also -ocr.xml file available. args Optional character vector additional arguments passed Tika, may yet implemented R interface, pattern c('-arg1','setting1','-arg2','setting2'). quiet Logical Tika command line messages errors suppressed. Defaults TRUE. cleanup Logical clean temporary files running command, can accumulate. Defaults TRUE. tempdir(). files automatically removed end R session even set FALSE. lib.loc Optional character vector describing library paths. Normally, best leave parameter alone. parameter included mainly package testing.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main R Interface to 'Apache Tika' — tika","text":"character vector order length input. Unprocessed files .character(NA). return = FALSE, NULL value invisibly returned. See Output Details section .","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika.html","id":"output-details","dir":"Reference","previous_headings":"","what":"Output Details","title":"Main R Interface to 'Apache Tika' — tika","text":"input file exist, downloaded, directory, Tika process , result .character(NA) file. default, output = \"text\" produces plain text metadata. formatting preserved case using tabs, newlines spaces. Setting output either \"xml\" shortcut \"x\" produce strict form HTML known XHTML, metadata head node formatted text body. Content retains formatting \"xml\". example, Word Excel table become HTML table, table data text td elements. \"html\" option shortcut \"h\" seem produce result \"xml\". Parse XHTML output xml2::read_html. Setting output \"jsonRecursive\" shortcut \"J\" produces tree structure `json`. Metadata fields top level. XHTML plain text found X-TIKA:content field. default text XHTML. can changed plain text like : output=c(\"jsonRecursive\",\"text\") output=c(\"J\",\"t\"). syntax meant mirror Tika's. Parse json jsonlite::fromJSON. output_dir specified, converted files also  saved directory. best use empty directory Tika  may overwrite existing files. Tika seems add extra file extension  file reduce chance, still best use empty  directory. file locations within output_dir maintain  general path structure input files. Downloaded files path  similar `tempdir()` R uses. original paths now relative  output_dir.  Files appended .txt default  plain text, can .json, .xml, .html depending  output setting. One way get list processed files  use list.files recursive=TRUE.  output_dir specified, files saved volatile temp  directory named tempdir() deleted R shuts .  function run large batches repeatedly,  temporary files can cleaned every time adding  cleanup=TRUE.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika.html","id":"background","dir":"Reference","previous_headings":"","what":"Background","title":"Main R Interface to 'Apache Tika' — tika","text":"Tika foundational library several Apache projects Apache Solr search engine. development since least 2007. efficient way found process many thousands documents Tika's 'batch' mode, mode used `rtika`. potentially things can done, given enough time attention, Apache Tika includes many libraries methods .jar file. source available : https://tika.apache.org/.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika.html","id":"installation","dir":"Reference","previous_headings":"","what":"Installation","title":"Main R Interface to 'Apache Tika' — tika","text":"Tika requires Java 8. Java installation instructions https://openjdk.org/install/ https://www.java.com/en/download/help/download_options.xml. default, R package internally invokes Java calling java command command line. specify path particular Java version, set path java attribute tika function.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main R Interface to 'Apache Tika' — tika","text":"","code":"# \\donttest{ #extract text batch <- c(   system.file(\"extdata\", \"jsonlite.pdf\", package = \"rtika\"),   system.file(\"extdata\", \"curl.pdf\", package = \"rtika\"),   system.file(\"extdata\", \"table.docx\", package = \"rtika\"),   system.file(\"extdata\", \"xml2.pdf\", package = \"rtika\"),   system.file(\"extdata\", \"R-FAQ.html\", package = \"rtika\"),   system.file(\"extdata\", \"calculator.jpg\", package = \"rtika\"),   system.file(\"extdata\", \"tika.apache.org.zip\", package = \"rtika\") ) text = tika(batch) cat(substr(text[1],45,450)) #> age ‘jsonlite’ #> June 1, 2017 #>  #> Version 1.5 #>  #> Title A Robust, High Performance JSON Parser and Generator for R #>  #> License MIT + file LICENSE #>  #> NeedsCompilation yes #>  #> Depends methods #>  #> Author Jeroen Ooms, Duncan Temple Lang, Lloyd Hilaiel #>  #> URL https://arxiv.org/abs/1403.2805, #>  #> https://www.opencpu.org/posts/jsonlite-a-smarter-json-encoder #>  #> BugReports http://github.com/jeroen/jsonlite/issues #>  #> Maintainer Jeroen Ooms  #more complex metadata if(requireNamespace('jsonlite')){    json = tika(batch,c('J','t'))   # 'J' is shortcut for jsonRecursive   # 't' for text   metadata = lapply(json, jsonlite::fromJSON )    #embedded resources   lapply(metadata, function(x){ as.character(x$'Content-Type') })    lapply(metadata, function(x){ as.character(x$'Creation-Date') })    lapply(metadata, function(x){  as.character(x$'X-TIKA:embedded_resource_path') }) } #> [[1]] #> character(0) #>  #> [[2]] #> character(0) #>  #> [[3]] #> [1] NA            \"/image1.jpg\" #>  #> [[4]] #> character(0) #>  #> [[5]] #> character(0) #>  #> [[6]] #> character(0) #>  #> [[7]] #>  [1] NA                       \"/index.html\"            \"/site.css\"              #>  [4] \"/external.png\"          \"/icon_info_sml.gif\"     \"/icon_warning_sml.gif\"  #>  [7] \"/icon_error_sml.gif\"    \"/icon_success_sml.gif\"  \"/tika.png\"              #> [10] \"/mattmann_cover150.jpg\" \"/asf-logo.gif\"          #>  # }"},{"path":"https://docs.ropensci.org/rtika/reference/tika_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Tika against a checksum — tika_check","title":"Check Tika against a checksum — tika_check","text":"used install_tika() internally,  can called directly jar file. latest jar files checksums https://tika.apache.org/download.html.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Tika against a checksum — tika_check","text":"","code":"tika_check(digest, jar = tika_jar(), algo = \"sha512\")"},{"path":"https://docs.ropensci.org/rtika/reference/tika_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Tika against a checksum — tika_check","text":"digest Character vector length one target checksum. jar Optional alternative path Tika jar file. algo Optional algorithm used create checksum. Defaults SHA512.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Tika against a checksum — tika_check","text":"logical jar checksum matches digest.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Files with the Content-Type Preserved in the File Extension — tika_fetch","title":"Fetch Files with the Content-Type Preserved in the File Extension — tika_fetch","text":"Internet, Content-Type information mainly communicated via server's headers. issue file saved disk without examining headers. file can missing incorrect file extension. example, URL ending slash (/) can produce file Content-Type  text/html. URL might also produce image/jpeg application/pdf file. URLs ending .php, .cfm can produce Content-Type. downloaded file lose server's declared Content-Type unless appended file extension. tika_fetch() gets file URL, examines server headers, appends matching file extension Tika's database.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Files with the Content-Type Preserved in the File Extension — tika_fetch","text":"","code":"tika_fetch(   urls,   download_dir = tempdir(),   ssl_verifypeer = TRUE,   retries = 1,   quiet = TRUE )"},{"path":"https://docs.ropensci.org/rtika/reference/tika_fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Files with the Content-Type Preserved in the File Extension — tika_fetch","text":"urls Character vector one URLs downloaded. download_dir Character vector length one describing path directory save results. ssl_verifypeer Logical, default TRUE. server SSL certificates might recognized host system, rare cases user can ignore know . retries Integer number times retry url failure download. quiet Logical download warnings printed. Defaults FALSE.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Files with the Content-Type Preserved in the File Extension — tika_fetch","text":"Character vector length order input paths describing locations downloaded files. Errors returned NA.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Files with the Content-Type Preserved in the File Extension — tika_fetch","text":"","code":"# \\donttest{ tika_fetch('https://tika.apache.org/') #> [1] \"/tmp/RtmpNV1EQe/rtika_file4331f138869.html\" # a unique file name with .html appended to it # }"},{"path":"https://docs.ropensci.org/rtika/reference/tika_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Structured XHTML — tika_html","title":"Get Structured XHTML — tika_html","text":"output_dir specified, files .html file extension.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Structured XHTML — tika_html","text":"","code":"tika_html(input, ...)"},{"path":"https://docs.ropensci.org/rtika/reference/tika_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Structured XHTML — tika_html","text":"input Character vector describing paths /urls input documents. ... parameters sent tika().","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_html.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Structured XHTML — tika_html","text":"character vector order length input, unparsed XHTML. Unprocessed files .character(NA).","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_html.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Structured XHTML — tika_html","text":"","code":"# \\donttest{ batch <- c(  system.file(\"extdata\", \"jsonlite.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"curl.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"table.docx\", package = \"rtika\"),  system.file(\"extdata\", \"xml2.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"R-FAQ.html\", package = \"rtika\"),  system.file(\"extdata\", \"calculator.jpg\", package = \"rtika\"),  system.file(\"extdata\", \"tika.apache.org.zip\", package = \"rtika\") ) html <- tika_html(batch) # }"},{"path":"https://docs.ropensci.org/rtika/reference/tika_jar.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to Apache Tika — tika_jar","title":"Path to Apache Tika — tika_jar","text":"Gets path Tika App .jar installed tika_install().","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_jar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to Apache Tika — tika_jar","text":"","code":"tika_jar()"},{"path":"https://docs.ropensci.org/rtika/reference/tika_jar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to Apache Tika — tika_jar","text":"string describing file path Tika App .jar file. found, NA.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_jar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Path to Apache Tika — tika_jar","text":"tika_jar() function also checks .jar actually file system. file path used tika() functions default.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_jar.html","id":"alternative-uses","dir":"Reference","previous_headings":"","what":"Alternative Uses","title":"Path to Apache Tika — tika_jar","text":"can call Apache Tika directly, shown examples . better use sys package avoid system2(), caused erratic, intermittent errors Tika.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_jar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Path to Apache Tika — tika_jar","text":"","code":"# \\donttest{ jar <- tika_jar() # see help sys::exec_wait('java',c('-jar',jar, '--help')) #> usage: java -jar tika-app.jar [option...] [file...] #>  #> Options: #>     -?  or --help          Print this usage message #>     -v  or --verbose       Print debug level messages #>     -V  or --version       Print the Apache Tika version number #>  #>     -g  or --gui           Start the Apache Tika GUI #>     -f  or --fork          Use Fork Mode for out-of-process extraction #>  #>     --config=<tika-config.xml> #>         TikaConfig file. Must be specified before -g, -s, -f or the dump-x-config ! #>     --dump-minimal-config  Print minimal TikaConfig #>     --dump-current-config  Print current TikaConfig #>     --dump-static-config   Print static config #>     --dump-static-full-config  Print static explicit config #>  #>     -x  or --xml           Output XHTML content (default) #>     -h  or --html          Output HTML content #>     -t  or --text          Output plain text content (body) #>     -T  or --text-main     Output plain text content (main content only via boilerpipe handler) #>     -A  or --text-all      Output all text content #>     -m  or --metadata      Output only metadata #>     -j  or --json          Output metadata in JSON #>     -y  or --xmp           Output metadata in XMP #>     -J  or --jsonRecursive Output metadata and content from all #>                            embedded files (choose content type #>                            with -x, -h, -t or -m; default is -x) #>     -a  or --async         Run Tika in async mode; must specify details in a tikaConfig file #>     -l  or --language      Output only language #>     -d  or --detect        Detect document type #>            --digest=X      Include digest X (md2, md5, sha1, #>                                sha256, sha384, sha512 #>     -eX or --encoding=X    Use output encoding X #>     -pX or --password=X    Use document password X #>     -z  or --extract       Extract all attachements into current directory #>     --extract-dir=<dir>    Specify target directory for -z #>     -r  or --pretty-print  For JSON, XML and XHTML outputs, adds newlines and #>                            whitespace, for better readability #>  #>     --list-parsers #>          List the available document parsers #>     --list-parser-details #>          List the available document parsers and their supported mime types #>     --list-parser-details-apt #>          List the available document parsers and their supported mime types in apt format. #>     --list-detectors #>          List the available document detectors #>     --list-met-models #>          List the available metadata models, and their supported keys #>     --list-supported-types #>          List all known media types and related information #>  #>  #>     --compare-file-magic=<dir> #>          Compares Tika's known media types to the File(1) tool's magic directory #> Description: #>     Apache Tika will parse the file(s) specified on the #>     command line and output the extracted text content #>     or metadata to standard output. #>  #>     Instead of a file name you can also specify the URL #>     of a document to be parsed. #>  #>     If no file name or URL is specified (or the special #>     name \"-\" is used), then the standard input stream #>     is parsed. If no arguments were given and no input #>     data is available, the GUI is started instead. #>  #> - GUI mode #>  #>     Use the \"--gui\" (or \"-g\") option to start the #>     Apache Tika GUI. You can drag and drop files from #>     a normal file explorer to the GUI window to extract #>     text content and metadata from the files. #>  #> - Batch mode #>  #>     Simplest method. #>     Specify two directories as args with no other args: #>          java -jar tika-app.jar <inputDirectory> <outputDirectory> #>  #> Batch Options: #>     -i  or --inputDir          Input directory #>     -o  or --outputDir         Output directory #>     -numConsumers              Number of processing threads #>     -bc                        Batch config file #>     -maxRestarts               Maximum number of times the  #>                                watchdog process will restart the forked process. #>     -timeoutThresholdMillis    Number of milliseconds allowed to a parse #>                                before the process is terminated and restarted #>     -fileList                  List of files to process, with #>                                paths relative to the input directory #>     -includeFilePat            Regular expression to determine which #>                                files to process, e.g. \"(?i)\\.pdf\" #>     -excludeFilePat            Regular expression to determine which #>                                files to avoid processing, e.g. \"(?i)\\.pdf\" #>     -maxFileSizeBytes          Skip files longer than this value #>  #>     Control the type of output with -x, -h, -t and/or -J. #>  #>     To modify forked process jvm args, prepend \"J\" as in: #>     -JXmx4g or -JDlog4j.configuration=file:log4j.xml. #> [1] 0 # detect language of web page sys::exec_wait('java',c('-jar',jar, '--language','https://tika.apache.org/')) #> en #> [1] 0 # }"},{"path":"https://docs.ropensci.org/rtika/reference/tika_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Get json Metadata and XHTML Content — tika_json","title":"Get json Metadata and XHTML Content — tika_json","text":"Tika can parse extract text almost anything, including zip, tar, tar.bz2, archives contain documents.  zip file 100 text files , can get text metadata file nested inside zip file.  recursive output currently used jsonified mode. See:  https://wiki.apache.org/tika/RecursiveMetadata document content XHTML \"X-TIKA:content\" field. output_dir specified, files .json file extension.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get json Metadata and XHTML Content — tika_json","text":"","code":"tika_json(input, ...)"},{"path":"https://docs.ropensci.org/rtika/reference/tika_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get json Metadata and XHTML Content — tika_json","text":"input Character vector describing paths /urls input documents. ... parameters sent tika().","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get json Metadata and XHTML Content — tika_json","text":"character vector order length input, unparsed json. Unprocessed files .character(NA).","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get json Metadata and XHTML Content — tika_json","text":"","code":"# \\donttest{ batch <- c(  system.file(\"extdata\", \"jsonlite.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"curl.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"table.docx\", package = \"rtika\"),  system.file(\"extdata\", \"xml2.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"R-FAQ.html\", package = \"rtika\"),  system.file(\"extdata\", \"calculator.jpg\", package = \"rtika\"),  system.file(\"extdata\", \"tika.apache.org.zip\", package = \"rtika\") ) json <- tika_json(batch) # }"},{"path":"https://docs.ropensci.org/rtika/reference/tika_json_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Get json Metadata and Plain Text Content — tika_json_text","title":"Get json Metadata and Plain Text Content — tika_json_text","text":"Tika can parse extract text almost anything, including zip, tar, tar.bz2, archives contain documents.  zip file 100 text files , can get text metadata file nested inside zip file.  recursive output currently used jsonified mode. See:  https://wiki.apache.org/tika/RecursiveMetadata document contents plain text \"X-TIKA:content\" field. output_dir specified, files .json file extension.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_json_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get json Metadata and Plain Text Content — tika_json_text","text":"","code":"tika_json_text(input, ...)"},{"path":"https://docs.ropensci.org/rtika/reference/tika_json_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get json Metadata and Plain Text Content — tika_json_text","text":"input Character vector describing paths /urls input documents. ... parameters sent tika().","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_json_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get json Metadata and Plain Text Content — tika_json_text","text":"character vector order length input, unparsed json. Unprocessed files .character(NA).","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_json_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get json Metadata and Plain Text Content — tika_json_text","text":"","code":"# \\donttest{ batch <- c(  system.file(\"extdata\", \"jsonlite.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"curl.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"table.docx\", package = \"rtika\"),  system.file(\"extdata\", \"xml2.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"R-FAQ.html\", package = \"rtika\"),  system.file(\"extdata\", \"calculator.jpg\", package = \"rtika\"),  system.file(\"extdata\", \"tika.apache.org.zip\", package = \"rtika\") ) json <- tika_json_text(batch) # }"},{"path":"https://docs.ropensci.org/rtika/reference/tika_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Plain Text — tika_text","title":"Get Plain Text — tika_text","text":"output_dir specified, files .txt file extension.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Plain Text — tika_text","text":"","code":"tika_text(input, ...)"},{"path":"https://docs.ropensci.org/rtika/reference/tika_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Plain Text — tika_text","text":"input Character vector describing paths /urls input documents. ... parameters sent tika().","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Plain Text — tika_text","text":"character vector order length input, plain text. Unprocessed files .character(NA).","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Plain Text — tika_text","text":"","code":"# \\donttest{ batch <- c(  system.file(\"extdata\", \"jsonlite.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"curl.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"table.docx\", package = \"rtika\"),  system.file(\"extdata\", \"xml2.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"R-FAQ.html\", package = \"rtika\"),  system.file(\"extdata\", \"calculator.jpg\", package = \"rtika\"),  system.file(\"extdata\", \"tika.apache.org.zip\", package = \"rtika\") ) text <- tika_text(batch) # }"},{"path":"https://docs.ropensci.org/rtika/reference/tika_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Structured XHTML Rendition — tika_xml","title":"Get a Structured XHTML Rendition — tika_xml","text":"output_dir specified, files .xml file extension.","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Structured XHTML Rendition — tika_xml","text":"","code":"tika_xml(input, ...)"},{"path":"https://docs.ropensci.org/rtika/reference/tika_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Structured XHTML Rendition — tika_xml","text":"input Character vector describing paths /urls input documents. ... parameters sent tika().","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_xml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Structured XHTML Rendition — tika_xml","text":"character vector order length input, unparsed XHTML. Unprocessed files .character(NA).","code":""},{"path":"https://docs.ropensci.org/rtika/reference/tika_xml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Structured XHTML Rendition — tika_xml","text":"","code":"# \\donttest{ batch <- c(  system.file(\"extdata\", \"jsonlite.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"curl.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"table.docx\", package = \"rtika\"),  system.file(\"extdata\", \"xml2.pdf\", package = \"rtika\"),  system.file(\"extdata\", \"R-FAQ.html\", package = \"rtika\"),  system.file(\"extdata\", \"calculator.jpg\", package = \"rtika\"),  system.file(\"extdata\", \"tika.apache.org.zip\", package = \"rtika\") ) xml <- tika_xml(batch) # }"},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"rtika-270-2023-04-30","dir":"Changelog","previous_headings":"","what":"rtika 2.7.0 (2023-04-30)","title":"rtika 2.7.0 (2023-04-30)","text":"CRAN release: 2023-05-04","code":"* Updated Tika to 2.4.1. Details are found at https://tika.apache.org/2.4.1/index.html . * Use tools::R_user_dir() instead of rappdirs, thanks to Maëlle Salmon (rOpenSci)"},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"rtika-241-2022-08-25","dir":"Changelog","previous_headings":"","what":"rtika 2.4.1 (2022-08-25)","title":"rtika 2.4.1 (2022-08-25)","text":"CRAN release: 2022-09-26","code":"* Updated Tika to 2.4.1. Details are found at https://tika.apache.org/2.4.1/index.html . * Use tools::R_user_dir() instead of rappdirs, thanks to Maëlle Salmon (rOpenSci)"},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"rtika-200-2021-08-05","dir":"Changelog","previous_headings":"","what":"rtika 2.0.0 (2021-08-05)","title":"rtika 2.0.0 (2021-08-05)","text":"CRAN release: 2021-08-06","code":"* Updated Tika to 2.0.0. Details are found at https://tika.apache.org/2.0.0/index.html ."},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"rtika-123-2020-04-24","dir":"Changelog","previous_headings":"","what":"rtika 1.23 (2020-04-24)","title":"rtika 1.23 (2020-04-24)","text":"CRAN release: 2019-12-12","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-1-23","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 1.23 (2020-04-24)","text":"","code":"* Updated Tika to 1.24.1. Details are found at https://tika.apache.org/1.24.1/index.html ."},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"rtika-123-2019-12-12","dir":"Changelog","previous_headings":"","what":"rtika 1.23 (2019-12-12)","title":"rtika 1.23 (2019-12-12)","text":"CRAN release: 2019-12-12","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-1-23-1","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 1.23 (2019-12-12)","text":"","code":"* Updated Tika to 1.23. Details are found at https://tika.apache.org/1.23/index.html ."},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"rtika-122-2019-08-01","dir":"Changelog","previous_headings":"","what":"rtika 1.22 (2019-08-01)","title":"rtika 1.22 (2019-08-01)","text":"CRAN release: 2019-08-02","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-1-22","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 1.22 (2019-08-01)","text":"","code":"* Updated Tika to 1.22"},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"rtika-120-2019-02-26","dir":"Changelog","previous_headings":"","what":"rtika 1.20 (2019-02-26)","title":"rtika 1.20 (2019-02-26)","text":"CRAN release: 2019-02-27","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-1-20","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 1.20 (2019-02-26)","text":"","code":"* Updated Tika to 1.20 * Includes two config files to either turn on or off OCR. This is only relevant on Linux variants that have the Tesseract OCR engine installed."},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"bug-fix-1-20","dir":"Changelog","previous_headings":"","what":"BUG FIX","title":"rtika 1.20 (2019-02-26)","text":"","code":"* Created a workaround because normalizePath() on Windows produced inconsistent results."},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"rtika-1191-2018-07-08","dir":"Changelog","previous_headings":"","what":"rtika 1.19.1 (2018-07-08)","title":"rtika 1.19.1 (2018-07-08)","text":"CRAN release: 2018-11-15","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-1-19-1","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 1.19.1 (2018-07-08)","text":"","code":"* Updated Tika to 1.19.1. * Updated the 'sys' package integration, and Jeroen informed the Tika team of an unexpected method of interprocess communication in the batch processor."},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"rtika-1119-2018-07-08","dir":"Changelog","previous_headings":"","what":"rtika 1.1.19 (2018-07-08)","title":"rtika 1.1.19 (2018-07-08)","text":"CRAN release: 2018-10-05","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"new-features-1-1-19","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rtika 1.1.19 (2018-07-08)","text":"new java() function used get command invoke Java tika() functions, allows option changing value across sessions. want use particular installation Java, set JAVA_HOME variable using Sys.setenv(JAVA_HOME = ‘path’). java() function check variable, found return instead default ‘java’ invocation. Updated Tika version 1.19.","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-1-1-19","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 1.1.19 (2018-07-08)","text":"tika_check function now uses advance SHA512 checksum instead MD5. implement , ‘digest’ package now dependency.","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"rtika-018-2018-04-25","dir":"Changelog","previous_headings":"","what":"rtika 0.1.8 (2018-04-25)","title":"rtika 0.1.8 (2018-04-25)","text":"CRAN release: 2018-05-02","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-0-1-8","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 0.1.8 (2018-04-25)","text":"install_tika() function now gets Tika 1.18 release came 2018-04-24, instead 1.18 development version.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-0-1-7","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 0.1.7 (2018-03-08)","text":"new install_tika() function allows package distributed CRAN. Tika App jar large go CRAN directly. .jar installed directory determined rappdirs::user_data_dir() function. .onLoad() function now gives various installation advice starting .","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"deprecated-and-defunct-0-1-7","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"rtika 0.1.7 (2018-03-08)","text":"Removed .jar favor install_tika() function.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"new-features-0-1-6","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rtika 0.1.6 (2018-03-01)","text":"tika(), tika_xml(), tika_json(), tika_text(), tika_html() new downloader, preserve server’s content-type encoding file extension possible. help Tika identify parse downloaded files reliably. depends ‘curl’ package. Added tika_fetch(), stand alone function download files append file extension matching content type declared server. Additional features function include specifying number download retries. output tika_fetch() can piped directly tika functions. New introductory vignette covers use functions surveys several applications. tika(), tika_xml(), tika_json(), tika_text(), tika_html() can now set return=FALSE, return R character vector invisibly returns NULL. useful massive file conversion jobs hundreds thousands files. Used pkgdown create website github pages. New tika_json_text() function gets metadata .json plain text content.","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"deprecated-and-defunct-0-1-6","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"rtika 0.1.6 (2018-03-01)","text":"Previous vignette removed favor new one. tikajar package required version. Moved .jar file back package ease installation hear CRAN.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-0-1-5","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 0.1.5 (2018-02-15)","text":"Added dependency ‘sys’ package ‘system2’ function causing intermittent errors ending tika mid process. Added startup check java version, using .onLoad() call ‘java -version’ Removed redundant conversion UTF-8, Tika batch routine already outputting UTF-8. Increased speed building packages (fewer downloads needed testing, examples run). Added Code Conduct CONDUCT.md file Set default ‘cleanup’ attribute TRUE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-0-1-4","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 0.1.4 (2018-02-15)","text":"big CRAN, removed Tika .jar file. Added Tika .jar new tikajar package github. Put ropensci review badge tikajar package also, since essential component package. Updated DESCRIPTION, documentation .travis.yml reflect new installation routine.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"new-features-0-1-3","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rtika 0.1.3 (2018-02-04)","text":"added convenience functions advertise output format: tika_xml(), tika_json(), tika_text(), tika_html().","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-0-1-3","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 0.1.3 (2018-02-04)","text":"README examples use magrittr pipe.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"new-features-0-1-2","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rtika 0.1.2 (2018-01-30)","text":"added many tests increase code coverage dramatically. integrated covr package.","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-0-1-2","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 0.1.2 (2018-01-30)","text":"Windows users, curl package recommended prevent base R download.file corrupting files.","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"deprecated-and-defunct-0-1-2","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"rtika 0.1.2 (2018-01-30)","text":"removed n_chars parameter favor using file.size() internally. removed onLoad.R checked java version order speed package loading simplify code coverage testing.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rtika 0.1.1 (2018-01-23)","text":"allows user input URLs file paths documents. URLs downloaded first temporary directory. previous interface changed.","code":""},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"minor-improvements-0-1-1","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rtika 0.1.1 (2018-01-23)","text":"Tika License file included source. added vignette basic text processing using library.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rtika/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rtika 0.1.0 (2018-01-19)","text":"Initial release. R interface Apache Tika batch processing CLI, found efficient CLI option. tika function returns processing results character vector. includes Tika App .jar. Tika source available : https://github.com/apache/tika","code":""}]
